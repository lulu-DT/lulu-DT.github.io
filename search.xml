<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>静态单赋值形式(SSA)</title>
      <link href="/2024/01/29/%E7%BC%96%E8%AF%91%E5%99%A8/SSA/"/>
      <url>/2024/01/29/%E7%BC%96%E8%AF%91%E5%99%A8/SSA/</url>
      
        <content type="html"><![CDATA[<h1 id="静态单赋值形式（1）"><a href="#静态单赋值形式（1）" class="headerlink" title="静态单赋值形式（1）"></a>静态单赋值形式（1）</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>静态单赋值形式（Static Single Assignment Form, SSA Form），是一种IR的形式，在《<a href="https://book.douban.com/subject/20436488/">编译器设计（第2版）</a>》[1]中有比较好的描述，在《Static Single Assignment Book》[4]中对应用和扩展SSA有更加多的有关内容。</p><p>虽然名字很长一串，但是实际上的意思就是说每个变量只能被赋值一次，每次赋值需要产生一个新的名字，也就是说下面的代码<strong>Code 1</strong>为了满足这个要求并且保持原有的语义就需要修改为<strong>Code 2</strong>的样子。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231225141926271.png" alt="image-20231225141926271"></p><p>这样一来就相当于给了每个赋值一个名字，这样$a_1、a_2、a_3$这些可以被称作$a$的一个版本，这样一来对于$a$的一个使用是在哪里被定值的就可以十分清楚了，可以让很多优化变得简单。</p><p>那么如果是类似于<strong>Code 3(a)</strong>这样的CFG该怎么办呢？在对$B1$、$B2$的$a$进行重命名之后会产生类似于<strong>Code 3(b)</strong>这样的结果。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownssaMerge.svg" alt="ssaMerge"></p><center><b>Code3(a)</b></center><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownssaMerge2.svg" alt="ssaMerge2"></p><center><b>Code3(b)</b></center><p>那么在$B3$中的$a$到底该引用谁是$a_1$还是$a_2$？这个时候可以定义一个叫做<strong>$\phi$函数（phi function）</strong>的特殊指令，如<strong>Code 4</strong>中在$B3$的入口处插入了一条$\phi$函数，其中新定义了a的新的version，$a_3$，在随后对$a$的使用被改写为使用$a_3$。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownssaMerge3.svg" alt="ssaMerge3"></p><center><b>Code 4</b></center><p>加入了$\phi$函数的基本块有几个前驱，$\phi$函数就有几个参数，每个参数对应了一个前驱，如果是从第一条边到达的基本块$B$，那么$\phi$函数返回第一个参数，如果是从第二条边到达了基本块$B$，那么$\phi$函数返回第二个参数，以此类推。</p><p>当然，事实上在计算机中找不到可以对应$\phi$函数的指令，所以需要在完成了优化之后将$\phi$函数进行去除。这里假设所有的$\phi$函数都是同时被执行的，所以不会产生顺序依赖问题，不过实际上可能会产生顺序依赖的问题，不过这个问题留到后面再来说明。</p><p>上面的内容可以说明“静态单赋值形式”中单赋值的含义，那么静态呢？静态和动态相对，比如在下面的代码<strong>Code 5</strong>中，对a是静态单赋值的，在IR代码中对a的赋值只有一次，但是不是动态的，这是一个循环在，实际执行中a会被赋值多次。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Label:</span><br><span class="line">a &lt;- 10</span><br><span class="line">jump Label</span><br></pre></td></tr></table></figure><center><b>Code 5</b></center><h2 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h2><h3 id="支配树和支配边界"><a href="#支配树和支配边界" class="headerlink" title="支配树和支配边界"></a>支配树和支配边界</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><blockquote><p><strong>支配树</strong>：对于有向图 G，有起点 S 和终点 D，从 S -&gt; D 存在许多条路径，在<strong>所有</strong>路径中都经过的点称为<strong>支配节点</strong>。在 S -&gt; D 中可能存在很多支配点，由这些支配节点构成的树称为<strong>支配树</strong></p></blockquote><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownv2-831fb2e37de27f263145da0bc789e8ae_720w.webp" alt="img"></p><p>例如上图中，到达 7 节点，可以走 1、5、7，也可以走 1、2、4、6、7，必经点只有 1，所以 1 是 7 的支配点。</p><blockquote><p><strong>支配边界</strong>：支配边界是<strong>一系列节点的集合</strong>，记为 W。某节点 x 的支配边界应满足如下条件，x 是 w 的前躯节点，但 x 不是 w 的严格支配节点（即不可以自己支配自己）</p></blockquote><p>直观解释支配边界就是<strong>所有最近不能被 n 严格支配的节点的集合</strong>。首先明确一些概念，才能更方便理解</p><ul><li><strong>严格支配 sdom</strong>，即 <script type="math/tex">d\,\,\ne\,\,m</script> ，且 <script type="math/tex">d\,\,dom\,\,m</script>，则称 <script type="math/tex">d\,\,sdom\,\,m</script></li><li><strong>直接支配 idom</strong>，在节点 n 的严格支配集<script type="math/tex">sdom(n)</script>中，离 n 最近的节点称为 n 的直接支配点</li></ul><div class="table-container"><table><thead><tr><th>节点号</th><th>B1</th><th>B2</th><th>B3</th><th>B4</th><th>B5</th><th>B6</th><th>B7</th></tr></thead><tbody><tr><td>被<script type="math/tex">sdom</script></td><td>NULL</td><td>{1}</td><td>{1, 2}</td><td>{1, 2}</td><td>{1}</td><td>{1, 2}</td><td>{1}</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>节点号</th><th>B1</th><th>B2</th><th>B3</th><th>B4</th><th>B5</th><th>B6</th><th>B7</th></tr></thead><tbody><tr><td>支配边界</td><td>NULL</td><td>{B7}</td><td>{B6}</td><td>{B6}</td><td>{B7}</td><td>{B7}</td><td>NULL</td></tr></tbody></table></div><hr><p>普通的IR转化为SSA形式的IR可以分为两步，首先在必要的位置<strong>插入$\phi$函数</strong>，这样就会得到类似于$x=\phi (x,x,x)$的语句，第二步是对所有的变量进行<strong>重命名</strong>，将类似于$x=\phi (x,x,x)$的语句转为类似于$x_4=\phi (x_1,x_2,x_3)$的语句。</p><h3 id="插入-phi-函数"><a href="#插入-phi-函数" class="headerlink" title="插入$\phi$函数"></a>插入$\phi$函数</h3><p>那么如何确定需要在哪些基本块的开始处插入哪些$\phi$函数？其他的视频讲到过关于图的支配性的问题，也介绍了支配边界和支配树的概念，往下看之前需要明确这些概念。</p><p>如果基本块$B$对变量$v$进行了定义，那么在每个$D\in DF(B)$前需要插入一个$v=\phi (v,…)$，这么做的原因是因为D的某些前驱一定会经过$B$，但是$D$的另外一些前驱不一定经过$B$，那么对于$v$中的值就会有冲突，所以就需要一个$\phi$函数。</p><blockquote><p>$D\in DF(B)$表示B的每一个支配边界， 支配边界的意思是D是B的最近的不能严格支配的点，就是不仅从B可以到D， 从其它路径也可以到D</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231225132840932.png" alt="image-20231225132840932"></p><center><b>未插入之前</b></center><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231225133219645.png" alt="image-20231225133219645"></p><center><b>插入之后</b></center></blockquote><p>不过事情不完全如此，有的时候$\phi$函数是多余的，比如说被定义的$v$是一个局部的，并没有被其他基本块使用，这个可以通过查看基本块的$LiveOut$进行判断。</p><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><p>在插入了$\phi$函数后，需要进行重命名，进行重命名的时候需要对当前变量的version进行追踪，这里可以使用栈来进行，在[1]中给出了一个算法：</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220320111654519.png" alt="image-20220320111654519" style="zoom:1000%;" /></p><p>这个算法的大致过程是在支配树上做先序遍历，然后对每个基本块内的指令进行遍历，如果出现了对一个变量$v$的定值，无论是在$\phi$函数进行定值还是在运算进行定值，都将产生一个新的version，并将新的version推入栈中。</p><blockquote><p><strong>先序遍历</strong>：根左右</p><p><strong>中序遍历</strong>：左根右</p><p><strong>后续遍历</strong>： 左右根</p></blockquote><p>遍历了基本块的所有指令后如果有后继基本块且后继基本块的开始处有$\phi$函数，那么对那些$\phi$函数进行填充。接下来对支配树上的结点进行递归。在返回时对栈进行出栈，恢复到进入此基本块之前的状态。</p><p>之所以是对支配树进行先序遍历是因为如果存在$D=idom(B)$，那么对于$B$中的某个类似于<code>x &lt;- v + 2</code>的指令来说其中的$v$一定是最新的。如果在$B$的开始处有关于$v$的$\phi$函数，那么$v$的version会被更新，如果没有关于$v$的$\phi$函数，那么可以保证当前栈中的$v$的version是最新的，因为$D=idom(B)$，那么对于任意的路径$P=D \stackrel{+}{\longrightarrow} B$ 上的结点$M$来说，不会出现任何的结点$M$满足$M\in dom(B)$，只会有$B\in DF(M)$，那么也就是说要么不定值，要么必须产生一个$\phi$函数。</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>例子都来自于[1]，这里差不多就照着念了。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220320153647980.png" alt="image-20220320153647980"></p><center><b>Fig 1. 进行转化前</b></center><p>(a)每个基本块的代码<br>(b)控制流图<br>(c)支配边界<br>(d)变量出现的基本块<br>(e)支配树</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220320153917897.png" alt="image-20220320153917897"></p><center><b>Fig 2. 插入&phi;函数后，重命名前</b></center><blockquote><p>举例分析： </p><p>$b_3$是$b_2$、$b_5$、$b_7$的支配边界， 那么需要在$b_3$前插入$\phi$函数， $b_1$和$b_5$都定义了$a$， 如果不插入$\phi$函数那么就会有冲突</p></blockquote><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220320154716221.png" alt="image-20220320154716221"></p><center><b>Fig 3. 重命名后</b></center><h2 id="摧毁"><a href="#摧毁" class="headerlink" title="摧毁"></a>摧毁</h2><p>在SSA Form下进行了优化之后需要将$\phi$函数进行去除这个过程可以叫做SAA的摧毁（destruction，叫translate out of SSA也行，或者是eliminate phi function），其实可以将SSA的destruction往后推，比如可以在进行了寄存器分配之后再进行[2] [3]，以后应该会有这方面的视频。</p><p>一个$\phi$函数的作用是根据基本块的入边返回对应的值，比如$\phi (x_1,x_2,x_3)$，如果从第一个边进入基本块就返回$x_1$，如果从第二个边进入基本块那么返回$x_2$，以此类推，也就是说如果从第一个边进入了基本块那么$x_4\gets \phi (x_1,x_2,x_3)$等价于$x_4\gets x_1$，第二个边进入等价于$x_4\gets x_2$，也是以此类推。</p><p>那么一个直接的想法就是将这些复制语句直接放在相应的前驱就可以了，如<strong>Fig 4(b)</strong>所示，将对应的复制语句放入对应的前驱中，这里面产生了$x_4$被赋值多次的情况，但是这个阶段已经不需要保持SSA Form的性质了。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdowncopyBefore.svg" alt="copyBefore"></p><center><b>copy before</b></center><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdowncopyAfter.svg" alt="copyAfter"></p><center><b>copy after</b></center><p>这些自动生成的复制语句可以在寄存器分配阶段进行消除，也可以使用其他优化进行消除，具体的可以看其他视频。</p><h3 id="关键边拆分"><a href="#关键边拆分" class="headerlink" title="关键边拆分"></a>关键边拆分</h3><p>在对$\phi$函数进行消除的时候可能会遇到<strong>Fig 5</strong>中的情况，$B$存在多个前驱基本块，而$D$存在多个后继基本块，如果将复制指令插入到$D$的末尾就会影响到其他无关的基本块。对于<strong>Fig 5</strong>中黄色的边可以称其为关键边（critical edge）。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdowncriticalEdge.svg" alt="criticalEdge"></p><center><b>Fig 5. 关键边</b></center><p>那么如何对这样的情况进行处理呢？那么就需要将<strong>Fig 5</strong>中的关键边进行拆分，具体就是在黄边中插入一个新的基本块，然后将复制语句放在新加入的基本块中，这个过程的结果如<strong>Fig 6</strong>。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdowncriticalEdgeSplit.svg" alt="criticalEdgeSplit"></p><center><b>Fig 6. 拆分后的关键边</b></center><p>不过不是所有对关键边的拆分都是必要的，对关键边的拆分可能会产生大量只有几条指令的基本块而且增加了跳转语句的数量，有的时候多执行一条指令并不会引起任何的问题，而有的时候则不行，下面有对原因进行说明。</p><p>这之前补充一下，大多数情况下不进行关键边分割其实不会有任何问题，因为插入的复制的名字是唯一的，所以不会对其他名字的变量产生影响。</p><h3 id="复制丢失问题（Lost-Copy-Problem）"><a href="#复制丢失问题（Lost-Copy-Problem）" class="headerlink" title="复制丢失问题（Lost-Copy Problem）"></a>复制丢失问题（Lost-Copy Problem）</h3><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220320222952874.png" alt="image-20220320222952874"></p><center><b>Fig 7</b></center><p>除了处理关键边的问题之外，还有其他的问题需要进行处理，比如在<strong>Fig 7</strong>中的情况，在<strong>Fig 7(b)</strong>中展现的是进行了复制折叠之后的代码，不进行复制折叠的情况类似于<strong>Fig 8</strong>。</p><p>在<strong>Fig 7(d)</strong>展示了使用关键边拆分来解决问题，但是这样会增加不必要的跳转，在循环中进行这样的操作对于循环的性能来说有损害。</p><p>这之类的问题就在于，按照优化前的方式来说，如果出现了$v_2$，那么$v_1$就不应该使用了，也就是$v_1$应该是被杀死的了，但是这类的优化延长了$v_1$的活跃范围，直接的插入复制代码并无法处理类似的情况，所以必须创建一个新的变量，存放$v_1$的值，让$v_1$的从此之后不再活跃，<strong>Fig 7(e)</strong>就使用了这种方法来解决问题。</p><p>进一步观察可以发现，在去除了$\phi$函数之后插入的copy指令在基本块末尾，而从概念上来说，这里被认为是在进入基本块之前执行的，在循环中的话实际上就是下一个循环中执行的语句被本次循环执行了。通过关键边分割保证所有的移动语句不会放在和$\phi$函数同一个基本块中，也就保证不会有上面的问题了。</p><h3 id="交换问题（Swap-Problem）"><a href="#交换问题（Swap-Problem）" class="headerlink" title="交换问题（Swap Problem）"></a>交换问题（Swap Problem）</h3><p>这种问题会出现在类似于下面<strong>Fig 8</strong>中，在将$\phi$函数去除后就出现了swap problem，原因是在进行优化的过程中假设$\phi$函数是同时执行的，所以即使出现了循环引用也没有关系，比如在<strong>Fig 8(a)</strong>的中间一列就出现了循环，使用一个临时变量可以打破这种循环，见<strong>Fig 8(b)</strong>。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231225143528396.png" alt="image-20231225143528396"></p><p>不过有时候多余的移动指令并不是必要的，只需要调整一下插入的移动指令的顺序就行了如<strong>Fig 9</strong>。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220323165705766.png" alt="image-20220323165705766"></p><center><b>Fig 9. 对产生的复制指令的重排序解决问题</b></center><h3 id="放在一起"><a href="#放在一起" class="headerlink" title="放在一起"></a>放在一起</h3><p>《Engineering a Compiler》中虽然虽然描述了这两个问题，但是没有给出解决的方法，特别是一个统一的方法对问题进行解决，好在作者的论文[6]中给出了解决的方法。这里来介绍一下解决方法，这个方法不会进行关键边分割，见<strong>Fig 10</strong>。</p><p>算法的主循环是对支配树进行先序遍历，这一点和进行重命名的时候是一样的，因为处理上面的两个问题都需要引入临时变量，同时修改后续的引用，所以使用了和重命名的时候相似的算法，每个前驱处理后继结点的$\phi$函数时也是类似的，如果后继存在了$\phi$函数，那么将移动语句插入到自己的末尾。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220323205250511.png" alt="image-20220323205250511"></p><center><b>(a)</b></center><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220323205335962.png" alt="image-20220323205335962"></p><center><b>(b)</b></center><center><b>Fig 10. 复制插入算法</b></center><p><strong>Fig 10(a)</strong>是主循环，而<strong>Fig 10(b)</strong>则是处理每一个基本块的具体步骤，主循环不难理解，主要来看看如何对每个基本块进行处理。<em>schedule_copies</em>的行为是两个链表驱动的，被分为3个步骤。</p><p>两个链表分别是<em>worklist</em>、<em>copy_set</em>，其中<em>copy_set</em>存放了将被插入的copy指令，其中的指令还需要进行一些处理，然后放入到<em>worklist</em>中，比如在<em>copy_set</em>中，可能存在着一些循环的依赖，这个时候就需要进行处理了，到达了<strong>pass three</strong>的第二部分，也就是$copy_set \neq \empty$（标记3）的时候，如果条件成立，那么说明在<em>copy_set</em>中存在一个环形依赖，需要利用插入一个移动语句进行破圈。</p><p>第一个pass是对后继中的$\phi$函数进行遍历，注意这个后继可能是自己本身，然后将需要插入的copy语句加入到<em>copy_set</em>，同时标记<em>src</em>被使用了（标记1），如果其他的copy语句的<em>dest</em>是<em>src</em>的话，那么它们之间存在了依赖关系，如果这个依赖不是相互的，就没有问题，能够通过顺序调整解决，这一点在后面的步骤中体现。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220324155837856.png" alt="image-20220324155837856"></p><center><b>Fig 11</b></center><p>第二个pass是对<em>copy_set</em>进行了遍历，如果copy语句的<em>dest</em>并没有被依赖，那么就可以移入到<em>work_list</em>中。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220324155917850.png" alt="image-20220324155917850"></p><center><b>Fig 12</b></center><p>第三个pass对两个链表都进行了遍历，首先遍历的是<em>work_list</em>，按照先进先出顺序取出copy语句进行插入，如果此copy语句的<em>dest</em>是出口活跃的，那么，先插入移动到临时变量的copy语句。看标记2，如果此时将一个copy语句（$dest \gets src$）从<em>copy_set</em>移动到了<em>work_list</em>，那么说明<em>src</em>已经被使用了，移动到了dest中了，那么就可以被安全的作为其他copy的<em>dest</em>进行覆盖了。问题来了，这个<em>src</em>可以被多个copy语句使用，那么以来，后面的copy语句收到的岂不是被覆盖过的值？这里就需要使用<em>map</em>了。<em>map</em>实际上是对变量（作为<em>src</em>）被移动到了那个变量（作为<em>dest</em>）进行了追踪的，例如$map[dest]\gets t$，意思是<em>dest</em>移动到了<em>t</em>（标记4）。第三个pass的第二部分已经在上面提到过了，就是打破环形依赖。</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20220324155959159.png" alt="image-20220324155959159"></p><center><b>Fig 13</b></center><p>在最后将所有的copy语句全部插入之后，就可以安全地删除掉所有的$\phi$函数了。观众可以对着这个算法把上面的几个例子走一遍，看看是否能够正确生成copy语句。</p><h3 id="通过-phi-Class-Congruence进行"><a href="#通过-phi-Class-Congruence进行" class="headerlink" title="通过 $\phi$-Class Congruence进行"></a>通过 $\phi$-Class Congruence进行</h3><p>在<em>Sreedhar et al.</em>[5]的文章中提出了<strong>phi congruence class</strong>的概念，可以利用其性质来消除$\phi$函数，这种方式我感觉比<em>Briggs et al.</em>[6]给出的的要好。除了可以减少插入的移动语句数量，在处理<em>lost-copy</em>和<em>swap problem</em>的时候并不需要去考虑特殊情况，也就是说处理它们和处理其他的情况是一致的。不过由于篇幅的关系，暂时不对其进行介绍了，留到后续的内容中吧，后续还会有更多有关SSA Form的内容的。</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>[1] Engineering a Compiler, K. Cooper</p><p>[2] S. Hack, D. Grund和G. Goos, 《Register Allocation for Programs in SSA-Form》, 收入 <em>Compiler Construction</em>, Berlin, Heidelberg, 2006, 页 247–262. doi: <a href="https://doi.org/10.1007/11688839_20">10.1007/11688839_20</a>.</p><p>[3] C. Wimmer和M. Franz, 《Linear scan register allocation on SSA form》, 收入 <em>Proceedings of the 8th annual IEEE/ ACM international symposium on Code generation and optimization - CGO ’10</em>, Toronto, Ontario, Canada, 2010, 页 170. doi: <a href="https://doi.org/10.1145/1772954.1772979">10.1145/1772954.1772979</a>.</p><p>[4] Static Single Assignment Book</p><p>[5] V. C. Sreedhar, R. D.-C. Ju, D. M. Gillies和V. Santhanam, 《Translating Out of Static Single Assignment Form》, 收入 <em>Static Analysis</em>, 卷 1694, A. Cortesi和G. Filé, 编 Berlin, Heidelberg: Springer Berlin Heidelberg, 1999, 页 194–210. doi: <a href="https://doi.org/10.1007/3-540-48294-6_13">10.1007/3-540-48294-6_13</a>.</p><p>[6] P. Briggs, K. D. Cooper, T. J. Harvey和L. T. Simpson, 《Practical improvements to the construction and destruction of static single assignment form》, <em>Softw: Pract. Exper.</em>, 卷 28, 期 8, 页 859–881, 7月 1998, doi: <a href="https://doi.org/10.1002/(SICI">10.1002/(SICI)1097-024X(19980710)28:8<859::AID-SPE188>3.0.CO;2-8</a>1097-024X(19980710)28:8<859::AID-SPE188>3.0.CO;2-8).</p></blockquote><p>转载自：<a href="https://space.bilibili.com/1535266/video">Bilibili</a></p><p>参考：</p><ol><li><a href="https://zhuanlan.zhihu.com/p/646759624">[图论] 支配树和支配边界 - 知乎 (zhihu.com)</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编译器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客Latex</title>
      <link href="/2024/01/29/blog/Latex%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81/"/>
      <url>/2024/01/29/blog/Latex%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo博客Latex"><a href="#Hexo博客Latex" class="headerlink" title="Hexo博客Latex"></a>Hexo博客Latex</h1><blockquote><p>🏎转载自：</p><p><a href="https://ling71.gitee.io/posts/1518592324.html">hexo博客:butterfly主题解决无法显示Latex数学公式 | AIL’BLOG (gitee.io)</a></p></blockquote><h2 id="渲染器"><a href="#渲染器" class="headerlink" title="渲染器"></a>渲染器</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="修改文章配置"><a href="#修改文章配置" class="headerlink" title="修改文章配置"></a>修改文章配置</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><h2 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$\begin&#123;eqnarray&#125; </span><br><span class="line">  \sigma(z) \equiv \frac&#123;1&#125;&#123;1+e^&#123;-z&#125;&#125;.</span><br><span class="line">\end&#123;eqnarray&#125;$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{eqnarray}   \sigma(z) \equiv \frac{1}{1+e^{-z}}.\end{eqnarray}</script>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex</title>
      <link href="/2024/01/29/%E5%85%B6%E5%AE%83/Latex/Latex/"/>
      <url>/2024/01/29/%E5%85%B6%E5%AE%83/Latex/Latex/</url>
      
        <content type="html"><![CDATA[<h1 id="Latex"><a href="#Latex" class="headerlink" title="Latex"></a>Latex</h1><blockquote><p>参考文档:<a href="https://katex.org/docs/supported.html">https://katex.org/docs/supported.html</a></p></blockquote><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="markdown插入Latex公式"><a href="#markdown插入Latex公式" class="headerlink" title="markdown插入Latex公式"></a>markdown插入Latex公式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$$$</span><br></pre></td></tr></table></figure><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><ul><li>matrix </li></ul><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">1<span class="built_in">&amp;</span>2<span class="keyword">\\</span></span><br><span class="line">3<span class="built_in">&amp;</span>4<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;bmatrix&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{bmatrix} 1&2\\ 3&4\\ \end{bmatrix}</script><ul><li>Pmatrix</li></ul><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;pmatrix&#125;</span><br><span class="line">1<span class="built_in">&amp;</span>2<span class="keyword">\\</span></span><br><span class="line">3<span class="built_in">&amp;</span>4<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;pmatrix&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{pmatrix} 1&2\\ 3&4\\ \end{pmatrix}</script><ul><li>Vmatrix</li></ul><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;vmatrix&#125;</span><br><span class="line">1<span class="built_in">&amp;</span>2<span class="keyword">\\</span></span><br><span class="line">3<span class="built_in">&amp;</span>4<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;vmatrix&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{vmatrix} 1&2\\ 3&4\\ \end{vmatrix}</script><ul><li>Bmatrix</li></ul><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;Bmatrix&#125;</span><br><span class="line">1<span class="built_in">&amp;</span>2<span class="keyword">\\</span></span><br><span class="line">3<span class="built_in">&amp;</span>4<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;Bmatrix&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{Bmatrix} 1&2\\ 3&4\\ \end{Bmatrix}</script><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">e = mc<span class="built_in">^</span>2</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{equation} e = mc^2 \end{equation}</script><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\tag</span>&#123;hi&#125; x+y<span class="built_in">^</span>&#123;2x&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\tag{hi} x+y^{2x}</script><h3 id="方程组"><a href="#方程组" class="headerlink" title="方程组"></a>方程组</h3><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line">a<span class="built_in">_</span>1x+b<span class="built_in">_</span>1y+c<span class="built_in">_</span>1z=d<span class="built_in">_</span>1<span class="keyword">\\</span></span><br><span class="line">a<span class="built_in">_</span>2x+b<span class="built_in">_</span>2y+c<span class="built_in">_</span>2z=d<span class="built_in">_</span>2<span class="keyword">\\</span></span><br><span class="line">a<span class="built_in">_</span>3x+b<span class="built_in">_</span>3y+c<span class="built_in">_</span>3z=d<span class="built_in">_</span>3</span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{cases} a_1x+b_1y+c_1z=d_1\\ a_2x+b_2y+c_2z=d_2\\ a_3x+b_3y+c_3z=d_3 \end{cases}</script><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">x = <span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line">a <span class="built_in">&amp;</span><span class="keyword">\text</span>&#123;if &#125; b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span><span class="keyword">\text</span>&#123;if &#125; d<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">x = \begin{cases} a &\text{if } b \\ c &\text{if } d\\ \end{cases}</script><h3 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h3><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\sum</span><span class="built_in">_</span>&#123;</span><br><span class="line"><span class="keyword">\begin</span>&#123;subarray&#125;&#123;l&#125;</span><br><span class="line">   i<span class="keyword">\in</span><span class="keyword">\Lambda</span><span class="keyword">\\</span></span><br><span class="line">   0&lt;j&lt;n</span><br><span class="line"><span class="keyword">\end</span>&#123;subarray&#125;&#125;</span><br></pre></td></tr></table></figure><p>$$\sum_{ \begin{subarray}{l}   i\in\Lambda\   0</p><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\sum</span><span class="built_in">_</span>&#123;<span class="keyword">\substack</span>&#123;0&lt;i&lt;m<span class="keyword">\\</span>0&lt;j&lt;n&#125;&#125;</span><br></pre></td></tr></table></figure><p>$$\sum_{\substack{0</p><h3 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h3><ul><li><em>Θ</em> <code>\varTheta</code></li><li><em>Σ</em> <code>\varSigma</code></li><li><em>Π</em> <code>\varPi</code></li><li><em>Φ</em> <code>\varPhi</code></li><li><em>ϕ</em> <code>\phi</code></li><li><em>ε</em> <code>\varepsilon</code></li><li><em>φ</em> <code>\varphi</code></li><li><em>α</em> <code>\alpha</code></li><li><em>β</em> <code>\beta</code></li><li><em>γ</em> <code>\gamma</code></li><li><em>δ</em> <code>\delta</code></li><li><em>θ</em> <code>\theta</code></li><li><em>μ</em> <code>\mu</code></li><li><em>π</em> <code>\pi</code></li><li>R <code>\Reals</code></li></ul><ol><li><h3 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h3></li></ol><ul><li><script type="math/tex">a'</script>: <code>a&#39;</code></li><li><script type="math/tex">\tilde{a}</script>: <code>\tilde&#123;a&#125;</code></li><li><script type="math/tex">\bar{y}</script>: <code>\bar&#123;y&#125;</code></li></ul><h3 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h3><ul><li><script type="math/tex">x_n</script> <code>x_n</code></li><li><script type="math/tex">e^x</script> <code>e^x</code></li><li><script type="math/tex">_u^o</script><code>_u^o</code></li><li>连分数</li><li>对齐方程</li></ul>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim配置</title>
      <link href="/2024/01/26/Linux/Vim%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/01/26/Linux/Vim%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Vim配置"><a href="#Vim配置" class="headerlink" title="Vim配置"></a>Vim配置</h1><h2 id="VimPlus"><a href="#VimPlus" class="headerlink" title="VimPlus"></a>VimPlus</h2><p><a href="https://github.com/chxuan/vimplus">chxuan/vimplus: :rocket:An automatic configuration program for vim (github.com)</a></p><h3 id="禁用插件"><a href="#禁用插件" class="headerlink" title="禁用插件"></a>禁用插件</h3><p><code>~/.vimrc.custom.plugins</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">UnPlug &#x27;chxuan/cpp-mode&#x27;</span><br><span class="line">UnPlug &#x27;chxuan/vim-edit&#x27;</span><br><span class="line">UnPlug &#x27;chxuan/vimplus-startify&#x27;</span><br><span class="line">UnPlug &#x27;preservim/tagbar&#x27;</span><br><span class="line">UnPlug &#x27;Valloric/YouCompleteMe&#x27;</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p><code>~/.vimrc.custom.config</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot; 开启鼠标</span><br><span class="line">set mouse=a</span><br><span class="line"></span><br><span class="line">&quot; 设置光标所在列高亮</span><br><span class="line">set cursorcolumn</span><br><span class="line"></span><br><span class="line">&quot; indentLine 开启代码对齐线</span><br><span class="line">let g:indentLine_enabled = 1</span><br></pre></td></tr></table></figure><h2 id="新增插件"><a href="#新增插件" class="headerlink" title="新增插件"></a>新增插件</h2><h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><p><strong><a href="https://github.com/lfv89/vim-interestingwords">vim-interestingwords</a></strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Plug &#x27;lfv89/vim-interestingwords&#x27;</span><br></pre></td></tr></table></figure><ul><li><code>&lt;Leader&gt;k</code>：高亮，重复按取消高亮</li></ul><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Plug &#x27;itchyny/vim-cursorword&#x27;</span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ul><li><code>&lt;Leader&gt;n</code>：开/关资源管理器</li><li><code>&lt;Leader&gt;k</code>：开/关当前关键词高亮</li><li><code>&lt;Leader&gt;g</code>：git提交记录</li><li><code>F9</code>：上一个主题</li><li><code>F10</code>：下一个主题</li><li><code>gcc</code>： 注释当前行</li><li><code>gcap</code>： 注释段落</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux环境搭建（Ubuntu）</title>
      <link href="/2024/01/26/Linux/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/01/26/Linux/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="linux环境搭建（Ubuntu）"><a href="#linux环境搭建（Ubuntu）" class="headerlink" title="linux环境搭建（Ubuntu）"></a>linux环境搭建（Ubuntu）</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --version  <span class="comment"># 查看git版本， 如果有git就不用安装了， 跳过下面步骤</span></span><br><span class="line"></span><br><span class="line">sudo apt-get install git <span class="comment"># 需要sudo权限</span></span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置git</span></span><br><span class="line">git config --global  user.name <span class="string">&quot;张三&quot;</span></span><br><span class="line">git config --global  user.email <span class="string">&quot;email@sian.com&quot;</span></span><br></pre></td></tr></table></figure><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>输完之后一直敲回车即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><h3 id="添加密钥到github-gitee"><a href="#添加密钥到github-gitee" class="headerlink" title="添加密钥到github/gitee"></a>添加密钥到github/gitee</h3><p>查看密钥，复制到剪贴板</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br><span class="line"><span class="comment"># ssh-rsa *****************</span></span><br></pre></td></tr></table></figure><h4 id="github"><a href="#github" class="headerlink" title="github"></a>github</h4><p>点击右上角头像， 进入setting界面</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231228140237626.png" alt="image-20231228140237626"></p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231228140402225.png" alt="image-20231228140402225"></p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231228140521664.png" alt="image-20231228140521664"></p><h4 id="gitee"><a href="#gitee" class="headerlink" title="gitee"></a>gitee</h4><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231228140623261.png" alt="image-20231228140623261"></p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231228140900748.png" alt="image-20231228140900748"></p><h2 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h2><blockquote><p>如果你还不知道什么是zsh以及为什么要用zsh， 可以阅读这篇<a href="https://zhuanlan.zhihu.com/p/63585679">文章</a></p></blockquote><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> zsh   <span class="comment"># 查看是否有zsh， 如果有就不用安装了</span></span><br><span class="line">sudo apt-get install zsh</span><br></pre></td></tr></table></figure><h3 id="使用oh-my-zsh"><a href="#使用oh-my-zsh" class="headerlink" title="使用oh-my-zsh"></a>使用oh-my-zsh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><h4 id="zsh-syntax-highlighting"><a href="#zsh-syntax-highlighting" class="headerlink" title="zsh-syntax-highlighting"></a>zsh-syntax-highlighting</h4><blockquote><p>提供语法高亮，爱护眼睛首选</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/lu-dingtao/zsh-syntax-highlighting.git ~/.oh-my-zsh/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><h4 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh-autosuggestions"></a>zsh-autosuggestions</h4><blockquote><p>自动补全， 爱护手指首选，敲tab键即可</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/lu-dingtao/zsh-autosuggestions.git  ~/.oh-my-zsh/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><h4 id="修改-zshrc插件配置"><a href="#修改-zshrc插件配置" class="headerlink" title="修改~/.zshrc插件配置"></a>修改~/.zshrc插件配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/plugins=.*/plugins=(git sudo zsh-autosuggestions zsh-syntax-highlighting conda-zsh-completion z sublime vscode)/g&quot;</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>或者手动打开~/.zshrc， 找到plugins这一行替换插件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231228142506195.png" alt="image-20231228142506195"></p><h4 id="其它配置（看自己的使用习惯）"><a href="#其它配置（看自己的使用习惯）" class="headerlink" title="其它配置（看自己的使用习惯）"></a>其它配置（看自己的使用习惯）</h4><blockquote><p>也可以手动打开~/.zshrc进行修改</p></blockquote><p>修改主题为ys</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/ZSH_THEME=\&quot;.*/ZSH_THEME=\&quot;ys\&quot;/g&quot;</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>添加~/bin到path</p><blockquote><p>PATH用于查找可执行文件路径</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;$a export PATH=~/bin:$&#123;PATH&#125;&#x27;</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>设置时间显示格式</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;$a HIST_STAMPS=&quot;yyyy-mm-dd&quot;&#x27;</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>git快捷键</p><ul><li>git status</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;$a alias gst=&quot;git status&quot;&#x27;</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h3><h4 id="1-tab键补全"><a href="#1-tab键补全" class="headerlink" title="1. tab键补全"></a>1. tab键补全</h4><p>敲命令的时候按tab键可以补全命令， 继续按可以切换</p><p><code>cd -</code>：切换路径</p><ul><li><p><code>cd -</code> + <code>tab</code>查看历史路径</p></li><li><p><code>cd -</code> + <code>number</code> 快速跳转路径， eg: <code>cd -2</code></p></li></ul><p><code>-&gt;</code>：历史命令补全</p><p>​    如果你在敲命令的时候发现后面已经显示出来你想要敲的命令，按<code>-&gt;</code>方向键直接补全</p><p><code>gst</code>：等价于<code>git status</code>， 快速查看仓库 status</p><h2 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h2><h3 id="htop"><a href="#htop" class="headerlink" title="htop"></a>htop</h3><blockquote><p>top的进阶版，查看进程及资源使用，类似于windows的任务管理器</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install htop</span><br></pre></td></tr></table></figure><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231228143449311.png" alt="image-20231228143449311"></p><h3 id="ncdu"><a href="#ncdu" class="headerlink" title="ncdu"></a>ncdu</h3><blockquote><p>查看当前路径内存占用</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ncdu</span><br></pre></td></tr></table></figure><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20231228143413817.png" alt="image-20231228143413817"></p><h2 id="conda安装"><a href="#conda安装" class="headerlink" title="conda安装"></a>conda安装</h2><blockquote><p>conda用于配置python虚拟环境， 可以在一个机器上拥有多个版本不同配置的python（很多python包不兼容， 如果都安装到一起会很多问题）</p></blockquote><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /your/workspace <span class="comment"># 新建一个放下载文件的地方,将下载的安装包放进去</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><p>一路yes加回车即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>配置bashrc或者zshrc</p><p>将下列代码加到~/.zshrc和~/.zshrc后面， 然后重新执行zsh或者bash</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">&gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">!! Contents within this block are managed by <span class="string">&#x27;conda init&#x27;</span> !!</span></span><br><span class="line">__conda_setup=&quot;$(&#x27;/root/miniconda3/bin/conda&#x27; &#x27;shell.bash&#x27; &#x27;hook&#x27; 2&gt; /dev/null)&quot;</span><br><span class="line">if [ $? -eq 0 ]; then</span><br><span class="line">    eval &quot;$__conda_setup&quot;</span><br><span class="line">else</span><br><span class="line">    if [ -f &quot;/root/miniconda3/etc/profile.d/conda.sh&quot; ]; then</span><br><span class="line">        . &quot;/root/miniconda3/etc/profile.d/conda.sh&quot;</span><br><span class="line">    else</span><br><span class="line">        export PATH=&quot;/root/miniconda3/bin:$PATH&quot;</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line">unset __conda_setup</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">&lt;&lt;&lt; <span class="string">conda initialize &lt;&lt;&lt;</span></span></span><br></pre></td></tr></table></figure><h3 id="配置（清华镜像）"><a href="#配置（清华镜像）" class="headerlink" title="配置（清华镜像）"></a>配置（清华镜像）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h3 id="新建虚拟环境"><a href="#新建虚拟环境" class="headerlink" title="新建虚拟环境"></a>新建虚拟环境</h3><p>新建一个名字叫myenv的虚拟环境</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create --name myenv</span><br></pre></td></tr></table></figure><h2 id="C-环境搭建"><a href="#C-环境搭建" class="headerlink" title="C++环境搭建"></a><a name="c++">C++环境搭建</a></h2><p>TODO:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gdb gcc g++ make cmake cgdb</span><br></pre></td></tr></table></figure><h2 id="vscode-环境搭建"><a href="#vscode-环境搭建" class="headerlink" title="vscode 环境搭建"></a>vscode 环境搭建</h2><h3 id="Vscode-远程连接服务器"><a href="#Vscode-远程连接服务器" class="headerlink" title="Vscode 远程连接服务器"></a>Vscode 远程连接服务器</h3><h4 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h4><p>找到插件市场， 搜索ssh， 下载第一个</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20240110154725230.png" alt="image-20240110154725230"></p><h4 id="远程连接服务器"><a href="#远程连接服务器" class="headerlink" title="远程连接服务器"></a>远程连接服务器</h4><p>依次点击， 选择第一个</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20240110154854984.png" alt="image-20240110154854984"></p><h4 id="输入配置信息"><a href="#输入配置信息" class="headerlink" title="输入配置信息"></a>输入配置信息</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Host 华为云  # 别名</span><br><span class="line">    HostName 110.41.183.160  # 服务器ip地址</span><br><span class="line">    User root  # 账户名称</span><br></pre></td></tr></table></figure><p>输入完成后保存刷新一下</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20240110155113978.png" alt="image-20240110155113978"></p><h4 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h4><h3 id="clangd"><a href="#clangd" class="headerlink" title="clangd"></a>clangd</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><blockquote><p>clangd用于提供c++、c代码补全，跳转，格式化等功能</p></blockquote><h4 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> clangd <span class="comment"># 老规矩，看一下装了没有， 没有就安装一个</span></span><br><span class="line">sudo apt-get install clangd</span><br></pre></td></tr></table></figure><h4 id="安装vscode-clangd插件"><a href="#安装vscode-clangd插件" class="headerlink" title="安装vscode clangd插件"></a>安装vscode clangd插件</h4><blockquote><p>在ssh连接上服务器后安装，否则无法将插件装到服务器上</p></blockquote><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20240111170142919.png" alt="image-20240111170142919"></p><h4 id="配置vscode"><a href="#配置vscode" class="headerlink" title="配置vscode"></a>配置vscode</h4><p>cmake加选项 <code>-DCMAKE_EXPORT_COMPILE_COMMANDS=1</code></p><h2 id="云服务器科学上网"><a href="#云服务器科学上网" class="headerlink" title="云服务器科学上网"></a>云服务器科学上网</h2><p><a href="https://www.yuyoung32.com/post/linux+clash科学上网/">云服务器Linux+Clash科学上网 | YuYoung’s Blog (yuyoung32.com)</a></p><h3 id="下载clash-for-linux"><a href="#下载clash-for-linux" class="headerlink" title="下载clash for linux"></a>下载clash for linux</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/lulu-DT/Source/raw/main/linux/clash_2.0.24_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -xvf clash_2.0.24_linux_amd64.tar.gz</span><br><span class="line">sudo cp clash /usr/local/bin/clash</span><br><span class="line">sudo chmox +x /usr/local/bin/clash</span><br></pre></td></tr></table></figure><h3 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><p>配置文件路径为<code>~/.config/clash</code></p><p>如果没有这个文件则手动创建一个</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir ~/.config/clash</span><br></pre></td></tr></table></figure><ul><li>添加config.yaml</li></ul><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20240123120035764.png" alt="image-20240123120035764"></p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20240123120111730.png" alt="image-20240123120111730"></p><p>将上述文件上传到云服务器的<code>~/.config/clash</code>路径下并重命名为config.yaml</p><ul><li>添加Country.mmdb（放到<code>~/.config/clash</code>）</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/Dreamacro/maxmind-geoip/releases/download/20240112/Country.mmdb</span><br></pre></td></tr></table></figure><h3 id="添加为开机自启和后台运行"><a href="#添加为开机自启和后台运行" class="headerlink" title="添加为开机自启和后台运行"></a>添加为开机自启和后台运行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/clash.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">写入以下内容</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Clash daemon, A rule-based proxy in Go.</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">Restart=always</span><br><span class="line">ExecStart=/usr/local/bin/clash -d /etc/clash</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置开机自启</span></span><br><span class="line">sudo systemctl enable clash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行clash</span></span><br><span class="line">sudo systemctl start clash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看clash状态</span></span><br><span class="line">sudo systemctl status clash</span><br></pre></td></tr></table></figure><h3 id="启用代理"><a href="#启用代理" class="headerlink" title="启用代理"></a>启用代理</h3><p>在<code>~/.bashrc</code>或者<code>~/.zshrc</code>后面写入以下内容</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">proxy_on() &#123;</span><br><span class="line">    export https_proxy=http://127.0.0.1:7890</span><br><span class="line">    export http_proxy=http://127.0.0.1:7890</span><br><span class="line">    export all_proxy=socks5://127.0.0.1:7890</span><br><span class="line"></span><br><span class="line">    echo &quot;Proxy is ON. Environment variables:&quot;</span><br><span class="line">    echo &quot;https_proxy=$https_proxy&quot;</span><br><span class="line">    echo &quot;http_proxy=$http_proxy&quot;</span><br><span class="line">    echo &quot;all_proxy=$all_proxy&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">proxy_off() &#123;</span><br><span class="line">    unset https_proxy</span><br><span class="line">    unset http_proxy</span><br><span class="line"></span><br><span class="line">    echo &quot;Proxy is OFF. Environment variables unset.&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新<span class="built_in">source</span>脚本， 取决于你用的是bash还是zsh</span></span><br><span class="line">source ~/.zshrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>proxy_on开启代理</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20240123120941819.png" alt="image-20240123120941819"></p><p>proxy_off关闭代理</p><p><img src="https://lulu-dt.oss-cn-chengdu.aliyuncs.com/markdownimage-20240123121001379.png" alt="image-20240123121001379"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EasyTools</title>
      <link href="/2024/01/26/tools/Untitled/"/>
      <url>/2024/01/26/tools/Untitled/</url>
      
        <content type="html"><![CDATA[<h1 id="EasyTools"><a href="#EasyTools" class="headerlink" title="EasyTools"></a>EasyTools</h1><h2 id="文章封面生成"><a href="#文章封面生成" class="headerlink" title="文章封面生成"></a>文章封面生成</h2><p><a href="https://coverview.vercel.app/editor">Coverview - Creating cover images for your blogs is now super easy</a></p><h2 id="PDF工具"><a href="#PDF工具" class="headerlink" title="PDF工具"></a>PDF工具</h2>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly Config</title>
      <link href="/2024/01/25/blog/butterfly/"/>
      <url>/2024/01/25/blog/butterfly/</url>
      
        <content type="html"><![CDATA[<h1 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h1><h2 id="📚-索引"><a href="#📚-索引" class="headerlink" title="📚 索引"></a>📚 索引</h2><blockquote><p>🚀 <a href="https://butterfly.js.org/posts/21cfbf15/">快速开始</a> - 📑 <a href="https://butterfly.js.org/posts/dc584b87/">主题页面</a> - 📌 <a href="https://butterfly.js.org/posts/4aa8abbe/">主题配置-1</a> - ⚔️ <a href="https://butterfly.js.org/posts/ceeb73f/">主题配置-2</a> - ❓ <a href="https://butterfly.js.org/posts/98d20436/">主题问答</a> - ⚡️ <a href="https://butterfly.js.org/posts/4073eda/">进阶教程</a></p></blockquote><h2 id="📌配置"><a href="#📌配置" class="headerlink" title="📌配置"></a>📌配置</h2><h3 id="导航栏头像"><a href="#导航栏头像" class="headerlink" title="导航栏头像"></a>导航栏头像</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="comment">#image</span></span><br><span class="line">  <span class="attr">display_title:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span> <span class="comment"># fixed navigation bar</span></span><br></pre></td></tr></table></figure><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/img/avatar.png</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span> <span class="comment">#头像转圈</span></span><br></pre></td></tr></table></figure><h3 id="顶部图片"><a href="#顶部图片" class="headerlink" title="顶部图片"></a>顶部图片</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%82%E9%83%A8%E5%9C%96">其它图片介绍</a></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">default_top_img：</span></span><br></pre></td></tr></table></figure><h3 id="菜单目录"><a href="#菜单目录" class="headerlink" title="菜单目录"></a>菜单目录</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line"><span class="string">时间轴:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line"><span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line"><span class="string">目录:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line"><span class="string">清单||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">  <span class="string">音乐:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">  <span class="string">电影:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">  <span class="string">照片:</span> <span class="string">/Gallery/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-images</span></span><br><span class="line"><span class="string">友链:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line"><span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#TOC">原文</a></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">expand:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">style_simple:</span> <span class="literal">false</span> <span class="comment"># for post</span></span><br><span class="line">  <span class="attr">scroll_percent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="页面锚点"><a href="#页面锚点" class="headerlink" title="页面锚点"></a>页面锚点</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># anchor</span></span><br><span class="line"><span class="attr">anchor:</span></span><br><span class="line">  <span class="comment"># when you scroll, the URL will update according to header id.</span></span><br><span class="line">  <span class="attr">auto_update:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Click the headline to scroll and update the anchor</span></span><br><span class="line">  <span class="attr">click_to_scroll:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%96%87%E7%AB%A0%E6%89%93%E8%B3%9E">链接</a></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure><h3 id="标签Plugin"><a href="#标签Plugin" class="headerlink" title="标签Plugin"></a>标签Plugin</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">链接</a></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note simple %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
